Grafos

Exemplo codigo dfs iterativo:

adj[] -> representacao do grafo
dist[] -> inicializado com infinito
dfs(){
	stack<int> s;
	s.push(origem);
	while(!s.is_empty()){
		v = s.top();
		s.pop();
		for(int u: adj[v]){
			if(dist[u] < infinito) continue;
			s.push(y);
		}
	}
}

Exemplo codigo BFS:

adj[] -> representacao do grafo
dist[] -> inicializado com infinito
dfs(){
	queue<int> s;
	s.push(origem);
	while(!s.is_empty()){
		v = s.top();
		s.pop();
		for(int u: adj[v]){  //intera elementos do vector
			if(dist[u] < infinito) continue;  //o continue passa para a proxima iteracao do loop
			s.push(u);
			dist[u] = 1 + dist[v]
		}
	}
}

PRIORITY QUEUE:
	fila em que e definido um elemento e uma condiçao de prioridade
	priority_queue<>

DIJKSTRA:
	Exemplo de codigo->

	adj[]  //representaçao do grafo
	dist[]  //inicializado com infinito
	visited[]  //visitados
	w[][]  //pesos dos vertices do grafo

	dijkstra(){
		priority_queue<pair<int,int>> q;
		q.insert(0, raiz);
		while(!q.empty()){
			v = q.top().second;
			q.pop();
			if(visited[v]) continue;
			visited[v] = 2;
			for(int u; adj[v]){
				if(dist[u] > dist[v] + w[v][u]){
					dist[u] = dist[v] + w[v][u];
					q.push(-dist[u], u);
				}
			}
		}
	}

INT_MAX = maximo que cabe em um int